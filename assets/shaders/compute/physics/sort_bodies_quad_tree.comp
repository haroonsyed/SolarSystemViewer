#version 430 core

layout(local_size_x = 1, local_size_y = 1, local_size_z = 1) in;

const uint bodiesPerCell = 1;

struct Body {
	vec4 position;
	vec4 velocity;
	float mass;
	int align1;
	int align2;
	int align3;
};

coherent layout(std430, binding = 4) buffer bodiesBuffer {

  Body bodies[];

};

uniform uint treeSize;
uniform uint bodySize;

void main() {

	const uint gid = gl_GlobalInvocationID.x;

	vec4 bodyPosition = bodies[gid].position;
	float m1 = bodies[gid].mass;

	vec2 force = vec2(0.0);

	float theta = 1.5;

	// Traverse tree and sum force according to F = Gm1m2/r2
	

}


